/*MACRO*/

PROC OPTIONS OPTION=MACRO;
RUN;

/*CREATING GLOBAL MACRO VARIABLES*/
%LET A=10; /* GLOBAL MACRO VARIABLE */
%LET B=BLR;
%LET C='BANGALORE';
%LET D=KA - BLR - MALLESHWARAM - 03;

/*SCOPE OF MACRO VARIABLE*/
*LOCAL
GLOBAL/*;
/*& IS A MACRO TRIGGER FOR MACRO VARIABLE*/

/*INVOKING(CALLING) MACRO VARIABLES*/
%PUT &A &B &C &D;

%PUT _USER_;
%PUT _AUTOMATIC_;

/*USEFUL AUTOMATIC VARIABLES ARE:
SYSDATE SYSDAY SYSTIME SYSVER  SYSLAST*/
%PUT _ALL_; /*DISPLAY THE VALUE FOR USER DEFINED MACRO VARIABLES AND AUTOMATIC VARIABLES*/ 
%PUT &SYSDATE  &SYSDAY &SYSTIME &SYSVER &SYSLAST;


DATA MACRO_EX;
name='athiq';
age=28;
sex=name;
add='marathahalli';
run;

PROC PRINT;
RUN;

data macro_ex1;
NAME='MACRO';
phone_no=123456789;
AGE="&A"; /*USE "" FOR MACRO VARIABLES*/
CITY="&C";
ADDRESS= "&D";
RUN;

PROC PRINT DATA=MACRO_EX1;
RUN;

%MACRO SAMPLE;
%LET NAME= FIRST MACRO;/* LOCAL MACRO VARIABLE */
%LET SEX= MALE; /* LOCAL MACRO VARIABLE */
%PUT _LOCAL_;
%PUT _GLOBAL_;
%MEND SAMPLE;

%SAMPLE; /* INVOKING MACRO CODE */

DATA FLOWERSALES;
INFILE CARDS;
INPUT CUSTOMERID$ SALESDATE DATE7. VARIETY$  QTY ;
CARDS;
240W 16AUG11 ROSE 256
240W 17AUG11 LILLY 321
356W 18AUG11 ORCHID 120
356W 19AUG11 LILLY 422
188R 20AUG11 ORCHID 300
188R 21AUG11 ROSE 500
356W 22AUG11 ROSE 700
;
RUN;

PROC PRINT DATA=FLOWERSALES;
FORMAT SALESDATE DDMMYY10.;
WHERE VARIETY='ROSE';
TITLE 'SALES DETAILS OF ROSE';
RUN;

/*/*example of using macros*/*/
/*define the macro*/
/*write the code incorporating the macro*/;

%let flower=ROSE;

DATA FLOWERSALE1;
INFILE CARDS;
INPUT CUSTOMERID$ SALESDATE DATE7. VARIETY$  QTY ;
IF VARIETY="&FLOWER";
CARDS;
240W 16AUG11 ROSE 256
240W 17AUG11 LILLY 321
356W 18AUG11 ORCHID 120
356W 19AUG11 LILLY 422
188R 20AUG11 ORCHID 300
188R 21AUG11 ROSE 500
356W 22AUG11 ROSE 700
123T 13OCT11 ROSE 500
;
RUN;
PROC PRINT DATA = FLOWERSALE1;
FORMAT SALESDATE DDMMYY10.;
TITLE "sales detail of &flower";
SUM QTY;
run;

/*MACRO CODE TO DISPLAY THE RESULT OF ANY DATASET*/
%macro PRINT_ME(dname);
proc print data=&dname;
run;
%mend print_me;

%PRINT_ME(EMPLOYEE);
%print_me(sashelp.buy);
%PRINT_ME(SASHELP.CLASS);
%PRINT_ME(FLOWERSALE1);

%MACRO SAMPLE_TEST;
DATA FIRST;
NAME='DAVID SHAW';
AGE=29;
MARKS=88;
OUTPUT;
NAME='JAMES BOND';
AGE=52;
MARKS=92;
OUTPUT;
RUN;

%MEND SAMPLE_TEST;

%SAMPLE_TEST;
%PRINT_ME(FIRST);

/*positional parameter macro*/
%macro print_dsn(dname, dvar1,dvar2);
proc print data=&dname;
var &dvar1 &dvar2;
run;
%mend print_dsn;

%print_dsn(sashelp.shoes,product,region);

/*keyword parameter MACRO*/
%macro print_dsn2(dname=, dvar1=,dvar2=);
proc print data=&dname;
var &dvar1 &dvar2;
run;
%mend print_dsn2;

%print_dsn2(dvar1=product,dname=sashelp.shoes,dvar2=region);

/*implementing sas function in macro*/
%MACRO FUNCTION;
%LET CITY= %LOWCASE(&B);
%LET STATE= %SUBSTR(&D,1,2);
%LET PLACE=%SCAN(&D,3);
%PUT &CITY &STATE &PLACE;
%MEND FUNCTION;

%FUNCTION;
/*TO USE ARITHMETIC VARIABLES*/
/*MACRO COMES IN ADVANCED CERTIFICATION*/
%LET X=10/4;
%LET Y=%EVAL(10/4); *EVAL RETURNS ONLY THE INTEGER NOT THE FRACTION/*;
%LET Z=%SYSEVALF(10/4);*SYSEVALF RETURNS THE FLOATING VALUE I.E. DECIMAL/*;
%PUT &X &Y &Z;

/*MACRO USING CONDITIONAL PROCESSING*/

%MACRO CONDITIONAL (X);
%IF %EVAL(&X<100) %THEN %LET TYPE=SMALL;
%ELSE %IF %EVAL(&X <200)  %THEN %LET TYPE=MEDIUM;
%ELSE %IF %EVAL(&X <300)  %THEN %LET TYPE=TALL;
%ELSE %LET TYPE= NOT DEFINED;

%PUT THE VALUE OF X IS &X AND TYPE IS &TYPE;
%MEND CONDITIONAL;

%CONDITIONAL(200);

/*ASSIGNMENT*/
/*BIGGEST ORDER RECORD IN FLOWERSALE*/
/*CLUE SORT AND TAKE THE FIRST RECORD*/
/*______________________________________________________________*/
/*HOW TO USE MACRO VARIABLE USING DATA SET VARIABLE*/
/*WE HAVE TO USE CALL SYMPUT */
/*SYMGET - REVERSE OF ABOVE*/

DATA MACRO_EX;
SET SASHELP.CLASS;
CALL SYMPUT('M',NAME); /* CREATING MACRO VARIABLE 'M' FROM DATASET VARIABLE 'NAME'*/
SAS_P=SYMGET('M'); /*CREATING DATASET VARIABLE 'SAS_P' FROM MACRO VARIABLE 'M' */
RUN;
%PUT &M;
%PRINT_ME(MACRO_EX);

/*MACRO USING PROC SQL*/

/*USING INTO CLAUSE*/

PROC SQL;
SELECT SUM(AGE) AS SUM_AGE INTO :SA
FROM SASHELP.CLASS;
QUIT;

%PUT &SA;

PROC SQL;
SELECT SUM(AGE) AS SUM_AGE, SUM(HEIGHT) AS SUM_HEIGHT INTO :SA, :SH
FROM SASHELP.CLASS;
QUIT;

%PUT &SA &SH;


/*DEBUGGING MACROS*/

/*THERE ARE SYSTEM OPTIONS, THEY ARE:*/
/* OPTIONS  MERROR/NOMERROR; Display warning message in log if sas could not able to find macro code*/
/* OPTIONS SERROR/NOSERROR;  Display warning message in log if sas could not able to find macro VARIABLE
BY DEFAULT MERROR AND SERROR IS ON*/

/*IMPORTANT FOR INTERVIEWS*/
/* OPTIONS MLOGIC/NOMLOGIC; BY DEFAULT NOMLOGIC IS ON - DISPLAYS THE ACTION PERFORMED BY MACRO PROCESSOR IN LOG WINDOW*/
/* OPTIONS MPRINT/NOMPRINT; BY DEFAULT NOMPRINT IS ON; DISPLAY THE SAS CODE GENERATED BY MACRO IN THE LOG WINDOW*/
/* OPTION SYMBOLGEN/NOSYMBOLGEN BY DEFAULT NOSYMBOLGEN IS ON - DISPLAY THE VALUE OF MACRO VARIABLES IN THE LOG WINDOW AFTER RESOLUTION*/
/* MLOGIC WILL WORK ONLY IF MPRINT AND SYMBOLGEN IS ON.*/

%SAHIL;
%PUT &SAHIL;

OPTIONS NOMLOGIC;
OPTIONS NOMPRINT;
OPTION NOSYMBOLGEN;


proc format;
value $sex
		'M' = 'Male'
		'F' = 'Female';
run;
data new;
set sashelp.class;
format sex $sex.;
run;
proc print;run;
proc contents data = new;run;

proc datasets lib=work;
   modify new;
     attrib _all_ label= ' '; 
     attrib _all_ format=;
quit;
proc contents data = new;run;
data one;
input name$ age sex$;
if cmiss(name,age,sex) then delete;
cards;
aaa 12 .
bb . f
cc . .
ddd 45 f
eee 55 m
fff 34 f
;
run;
proc print;
run;
proc means data = one nmiss n;
run;
a1 a2 a3 a4 a5 = a1 - a5
a1 aw d3 r5 f6 = a1 - - f6;
