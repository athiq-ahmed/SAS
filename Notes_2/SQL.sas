/*SQL - STRUCTURE QUERY LANGUAGE*/
/*IT IS A DATABASE WHICH STORES DATA IN THE FORM OF TABLES*/

SYNTAX-
PROC SQL;
SQL CODE;
QUIT;

DDL - DATA DEFINITON LANGUAGE
DML - DATA MANIPULATION LANGUAGE(INSERT,UPDATE)
DCL - DATA CONTROL LANGUAGE;
/*
SELECT  - IS USED TO GIVE COLUMNS NAME
FROM    - IS USED TO GIVE TABLE NAME
WHERE   - IS USED TO GIVE SOME CONDITIONS
*/

/*
RDBMS - > RELATIONAL DATABASE MANAGEMENT SYSTEM
*/

PROC SQL;
SELECT NAME,AGE,SEX
FROM SASHELP.CLASS;
QUIT;

PROC SQL;
SELECT *
FROM SASHELP.CLASS;
QUIT;

						/*CREATING TABLE*/

PROC SQL;
CREATE TABLE FIRST LIKE SASHELP.CLASS;
DESCRIBE TABLE FIRST;
QUIT;

* --> IT INDICATES TO DISPLAY ALL THE VARIABLES IN THE DSN;

PROC SQL;
CREATE TABLE SECOND AS
SELECT NAME,AGE,SEX
FROM SASHELP.CLASS;
SELECT * FROM SECOND;
QUIT;

PROC SQL;
CREATE TABLE THIRD
(SNAME CHAR(10) ,SAGE NUM,SHEIGHT NUM);
DESCRIBE TABLE THIRD;
QUIT;


/*INSERTING VALUES INTO THE TABLE*/

PROC SQL;
INSERT INTO FIRST
VALUES('DAVID','M',28,156,62)
VALUES('CELIA','F',29,136,45);
SELECT * FROM  FIRST;
QUIT;

PROC SQL;
INSERT INTO FIRST(NAME,AGE,HEIGHT)
VALUES('PHILIP',28,162)
VALUES('CAROL',26,132,);
SELECT * FROM  FIRST;
QUIT;

PROC SQL;
INSERT INTO FIRST SET NAME='DHONI',AGE=31
				  SET NAME = 'VIRAT',SEX='M';
SELECT * FROM  FIRST;
QUIT;

PROC SQL;
INSERT INTO THIRD
SELECT NAME,AGE,HEIGHT
FROM SASHELP.CLASS;
SELECT * FROM THIRD;
QUIT;

						/*ALTERING TABLE*/
/*Add,Modify,Drop*/
PROC SQL;
ALTER TABLE THIRD
ADD MARKS NUM,
	GROUP CHAR(1);
DESCRIBE TABLE THIRD;
QUIT;

PROC SQL;
INSERT INTO THIRD SET MARKS = 25,GROUP = 'RED'
				  SET MARKS = 35,GROUP = 'GREEN';
SELECT * FROM THIRD;
QUIT;

					/*MODIFYING THE TABLE*/


PROC SQL;
DESCRIBE TABLE THIRD;
ALTER TABLE THIRD
MODIFY SNAME CHAR(15),
	   GROUP CHAR(8);
DESCRIBE TABLE THIRD;
QUIT;

					/*DROP SOME COLUMNS*/

PROC SQL;
ALTER TABLE THIRD
DROP MARKS,GROUP;
DESCRIBE TABLE THIRD;
QUIT;

					/*UPDATING THE TABLE*/

PROC SQL;
UPDATE THIRD
		SET SNAME = UPCASE(SNAME),
			SAGE = SAGE+10;
SELECT * FROM THIRD;
QUIT;

					/*DELETING */

PROC SQL;
DELETE FROM THIRD
WHERE SNAME IS MISSING;
SELECT * FROM THIRD;
QUIT;

PROC SQL;
DROP TABLE THIRD;
SELECT * FROM THIRD;
QUIT;

PROC SQL;
SELECT * FROM SECOND;
QUIT;

CREATE ONE TABLE WITH THE NAME OF ABC WHICH HAVE ALL THE 
VARIABLE AND OBSERVATIONS OF SASHELP.CLASS AND UPDATE
TABLE ABC BY CONVERTING NAME INTO UPPERCASE AND 22 AGE
;
PROC SQL;
CREATE TABLE ABC   AS
SELECT * FROM  SASHELP.CLASS;
UPDATE ABC
		SET NAME = UPCASE(NAME),
			AGE = AGE+20;
SELECT * FROM ABC;
QUIT;

proc sql;
create table abc like sashelp.class;
insert into abc 
select * from sashelp.class;
update abc
		set name = upcase(name),age = age+22;
select * from abc;
quit;

proc sql;
create table bbb as 
select * from abc;
alter table bbb
add marks num,
group char(14);
insert into bbb (marks,group)
values(23,'ccc')
values(34,'ddd');
update bbb
set name = propcase(name),
		age = age+100;
select * from bbb;
quit;

PROC SQL;
SELECT COLUMN_LIST
FROM TABE_LIST
WHERE CONDITION
GROUP BY COLUMN_LIST
HAVING SQL_EXPRESSION
ORDER BY COLUMN_LIST;
QUIT;

PROC SQL;
SELECT *
FROM ABC
WHERE AGE=32;
QUIT;

PROC SQL;
SELECT *
FROM ABC
WHERE AGE= 32 AND SEX = 'M';
QUIT;

PROC SQL;
SELECT SEX,SUM(AGE) AS SA
FROM ABC
GROUP BY SEX;
QUIT;

PROC SQL;
SELECT SEX,MAX(HEIGHT) FORMAT = 4.1 AS MH,
	       MIN(WEIGHT)AS MW
FROM ABC
GROUP BY SEX;
QUIT;

PROC SQL;
SELECT * 
FROM ABC
HAVING AGE > (SELECT AGE FROM ABC WHERE NAME = 'CAROL');
QUIT;

PROC SQL;
SELECT *
FROM sashelp.class
having AGE = MAX(AGE);
QUIT;

proc sql;
select max(age) from sashelp.class 
where age not in (select max(age) from sashelp.class );
quit;

PROC SQL;
SELECT *
FROM ABC
WHERE SEX = 'M'
HAVING AGE > MEAN (AGE);
QUIT;

PROC SQL;
SELECT *
FROM ABC
ORDER BY SEX;
QUIT;

PROC SQL;
SELECT *
FROM ABC
ORDER BY SEX DESC;
QUIT;

*PROC SQL
SELECT DISTINCT(NAME)
FROM FIRST
QUIT;

PROC SQL;
SELECT DISTINCT SEX FROM SASHELP.CLASS;
QUIT;

PROC SQL;
SELECT COUNT(*) AS NUMBER_OF_OBS
FROM ABC;
QUIT;

PART 1
ID NAME SEX
101 SACHIN M
104 SAINA F
103 LATA F
105 KARHIK M

PART 2
ID CITY CODE
103 BLR  080
105 HYD 081
102 CHN 444
106 KOL 333

;
DATA PART1;
INPUT ID NAME $ SEX$;
CARDS;
101 SACHIN M
104 SAINA F
103 LATA F
105 KARHIK M
;
RUN;
PROC PRINT;
RUN;

DATA PART1A;
INPUT ID PLAYERNAME $ SEX$;
CARDS;
102 SEHWAG M
106 DHONI M
;
RUN;
PROC PRINT;
RUN;

DATA PART2;
INPUT ID CITY$ CODE $;
CARDS;
103 BLR  080
105 HYD 081
102 CHN 444
106 KOL 333
;
RUN;
PROC PRINT;
RUN;

PROC SQL;
SELECT *
FROM PART1,PART2;
QUIT;

PROC SQL;
SELECT *
FROM PART1,PART2
WHERE PART1.ID = PART2.ID;
QUIT;

PROC SQL;
SELECT *
FROM PART1 INNER JOIN PART2 ON PART1.ID=PART2.ID;
QUIT;

PROC SQL;
SELECT COALESCE(PART1.ID,PART2.ID)AS ID,NAME,SEX,CITY,CODE
FROM PART1 INNER JOIN PART2 ON PART1.ID=PART2.ID;
QUIT;

PROC SQL;
SELECT COALESCE(PART1.ID,PART2.ID)AS ID,NAME,SEX,CITY,CODE
FROM PART1 LEFT JOIN PART2 ON PART1.ID=PART2.ID;
QUIT;

PROC SQL;
SELECT COALESCE(PART1.ID,PART2.ID)AS ID,NAME,SEX,CITY,CODE
FROM PART1 RIGHT JOIN PART2 ON PART1.ID=PART2.ID;
QUIT;

PROC SQL;
SELECT COALESCE(PART1.ID,PART2.ID)AS ID,NAME,SEX,CITY,CODE
FROM PART1 FULL JOIN PART2 ON PART1.ID=PART2.ID;
QUIT;


PROC SQL;
CREATE TABLE PLAYER_LIST AS
SELECT * FROM PART1 UNION
SELECT * FROM PART1A;
SELECT * FROM PLAYER_LIST;
QUIT;

					/*IMPORTING THE DATA*/

1.THROUGHT IMPORT WIZARD
2.USING PROCEDURE
3.USING LIBNAME(ONLY FOR TEMPRORAY DATA STORAGE)
4.DDE - DYNAMIC DATA EXCHANE (ONLY FOR EXCEL FILES)


;
PROC IMPORT DATAFILE = 'D:\Athiq\Datasets\LIST.XLS'
				OUT = NEW_LIST
				DBMS = EXCEL
				REPLACE;
*SHEET = 'SHEETNAME'
RANGE = 'UL:LR'
GETNAMES = NO/YES - IF I ROW SHOULD NOT BE TAKEN AS VARIABLE 
						DEFAULT BY SAS;
RUN;
*LIBNAME LIBREF(ABC) EXCEL 'LOCATION\FILE.XLS';
PROC PRINT DATA = LIBREF.'SHEET1$'N;
RUN;

LIBNAME ABC EXCEL 'D:\Athiq\Datasets\LIST.XLS';
PROC PRINT DATA = ABC.'SHEET1$'N;
RUN;

FILENAME XYZ DDE 'CLIPBOARD';
DATA EXCELDT;
INFILE XYZ NOTAB DLM = '09'X DSD;
INPUT NAME$ AGE MARKS3 MARKS4;
RUN;
PROC PRINT DATA= EXCELDT;
RUN;

